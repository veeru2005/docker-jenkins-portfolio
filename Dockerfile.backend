# Stage 1: Build with Maven and Java 21
FROM maven:3.9.6-eclipse-temurin-21 AS build

WORKDIR /app

# Copy local backend code instead of cloning from git
COPY backend/ .

# Create a new application.properties with environment variables
RUN cat > src/main/resources/application.properties << 'EOF'
# Server Configuration
server.port=8080

# MySQL Database Configuration  
spring.datasource.url=jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?createDatabaseIfNotExist=true
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
SPRING_JPA_HIBERNATE_DDL_AUTO: update

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JavaMail Sender Configuration (use your own email provider settings)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JWT Secret Key (use a long, random, and secure string)
jwt.expiration=86400000

# Security JWT Secret Key
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# ===============================================
# CLOUDINARY CONFIGURATION
# ===============================================
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# Allow larger multipart uploads
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
EOF

RUN mvn clean package -DskipTests    # Stage 2: Run with Tomcat
    FROM tomcat:9.0-jdk17-temurin

    # Remove default apps
    RUN rm -rf /usr/local/tomcat/webapps/*

    # Copy backend WAR to Tomcat
    # Copy the WAR file to Tomcat webapps with a custom name for easier access
COPY --from=build /app/target/*.war /usr/local/tomcat/webapps/portfolio_back1.war

    EXPOSE 8080
    CMD ["catalina.sh", "run"]

